// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ephemerisType } from './ephemeris-type';
import { manCovRefFrame } from './man-cov-ref-frame';
import { meanElementTheory } from './mean-element-theory';
import { referenceFrame } from './reference-frame';
import { timeSystem } from './time-system';


export class omm {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):omm {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsomm(bb:flatbuffers.ByteBuffer, obj?:omm):omm {
  return (obj || new omm()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsomm(bb:flatbuffers.ByteBuffer, obj?:omm):omm {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new omm()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('$omm');
}

CCSDSOmmVERS():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CREATIONDATE():string|null
CREATIONDATE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CREATIONDATE(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ORIGINATOR():string|null
ORIGINATOR(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ORIGINATOR(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

OBJECTNAME():string|null
OBJECTNAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
OBJECTNAME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

OBJECTID():string|null
OBJECTID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
OBJECTID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

CENTERNAME():string|null
CENTERNAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CENTERNAME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

REFFRAME():referenceFrame {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : referenceFrame.TEME;
}

REFFRAMEEPOCH():string|null
REFFRAMEEPOCH(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
REFFRAMEEPOCH(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TIMESYSTEM():timeSystem {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : timeSystem.UTC;
}

MEANELEMENTTHEORY():meanElementTheory {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : meanElementTheory.SGP4;
}

CommENT():string|null
CommENT(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CommENT(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

EPOCH():string|null
EPOCH(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
EPOCH(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

SEMIMAJORAXIS():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

MEANMOTION():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

ECCENTRICITY():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

INCLINATION():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

RAOFASCNODE():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

ARGOFPERICENTER():number {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

MEANANOMALY():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

GM():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

MASS():number {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

SOLARRADAREA():number {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

SOLARRADCOEFF():number {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

DRAGAREA():number {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

DRAGCOEFF():number {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

EPHEMERISTYPE():ephemerisType {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ephemerisType.SGP4;
}

CLASSIFICATIONTYPE():string|null
CLASSIFICATIONTYPE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CLASSIFICATIONTYPE(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NORADCATID():number {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

ELEMENTSETNO():number {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

REVATEPOCH():number {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

BSTAR():number {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

MEANMOTIONDOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

MEANMOTIONDDOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

COVREFFRAME():manCovRefFrame {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : manCovRefFrame.RSW;
}

CXX():number {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CYX():number {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CYY():number {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZX():number {
  const offset = this.bb!.__offset(this.bb_pos, 78);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZY():number {
  const offset = this.bb!.__offset(this.bb_pos, 80);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 82);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CXDOTX():number {
  const offset = this.bb!.__offset(this.bb_pos, 84);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CXDOTY():number {
  const offset = this.bb!.__offset(this.bb_pos, 86);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CXDOTZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 88);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CXDOTXDOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 90);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CYDOTX():number {
  const offset = this.bb!.__offset(this.bb_pos, 92);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CYDOTY():number {
  const offset = this.bb!.__offset(this.bb_pos, 94);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CYDOTZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 96);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CYDOTXDOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 98);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CYDOTYDOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 100);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZDOTX():number {
  const offset = this.bb!.__offset(this.bb_pos, 102);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZDOTY():number {
  const offset = this.bb!.__offset(this.bb_pos, 104);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZDOTZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 106);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZDOTXDOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 108);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZDOTYDOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 110);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CZDOTZDOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 112);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

USERDEFINEDBIP0044TYPE():number {
  const offset = this.bb!.__offset(this.bb_pos, 114);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

USERDEFINEDOBJECTDESIGNATOR():string|null
USERDEFINEDOBJECTDESIGNATOR(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
USERDEFINEDOBJECTDESIGNATOR(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 116);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

USERDEFINEDEARTHMODEL():string|null
USERDEFINEDEARTHMODEL(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
USERDEFINEDEARTHMODEL(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 118);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

USERDEFINEDEPOCHTIMESTAMP():number {
  const offset = this.bb!.__offset(this.bb_pos, 120);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

USERDEFINEDMICROSECONDS():number {
  const offset = this.bb!.__offset(this.bb_pos, 122);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startomm(builder:flatbuffers.Builder) {
  builder.startObject(60);
}

static addCCSDSOmmVERS(builder:flatbuffers.Builder, CCSDSOmmVERS:number) {
  builder.addFieldFloat64(0, CCSDSOmmVERS, 0.0);
}

static addCREATIONDATE(builder:flatbuffers.Builder, CREATIONDATEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, CREATIONDATEOffset, 0);
}

static addORIGINATOR(builder:flatbuffers.Builder, ORIGINATOROffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ORIGINATOROffset, 0);
}

static addOBJECTNAME(builder:flatbuffers.Builder, OBJECTNAMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, OBJECTNAMEOffset, 0);
}

static addOBJECTID(builder:flatbuffers.Builder, OBJECTIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, OBJECTIDOffset, 0);
}

static addCENTERNAME(builder:flatbuffers.Builder, CENTERNAMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, CENTERNAMEOffset, 0);
}

static addREFFRAME(builder:flatbuffers.Builder, REFFRAME:referenceFrame) {
  builder.addFieldInt8(6, REFFRAME, referenceFrame.TEME);
}

static addREFFRAMEEPOCH(builder:flatbuffers.Builder, REFFRAMEEPOCHOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, REFFRAMEEPOCHOffset, 0);
}

static addTIMESYSTEM(builder:flatbuffers.Builder, TIMESYSTEM:timeSystem) {
  builder.addFieldInt8(8, TIMESYSTEM, timeSystem.UTC);
}

static addMEANELEMENTTHEORY(builder:flatbuffers.Builder, MEANELEMENTTHEORY:meanElementTheory) {
  builder.addFieldInt8(9, MEANELEMENTTHEORY, meanElementTheory.SGP4);
}

static addCommENT(builder:flatbuffers.Builder, CommENTOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, CommENTOffset, 0);
}

static addEPOCH(builder:flatbuffers.Builder, EPOCHOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, EPOCHOffset, 0);
}

static addSEMIMAJORAXIS(builder:flatbuffers.Builder, SEMIMAJORAXIS:number) {
  builder.addFieldFloat64(12, SEMIMAJORAXIS, 0.0);
}

static addMEANMOTION(builder:flatbuffers.Builder, MEANMOTION:number) {
  builder.addFieldFloat64(13, MEANMOTION, 0.0);
}

static addECCENTRICITY(builder:flatbuffers.Builder, ECCENTRICITY:number) {
  builder.addFieldFloat64(14, ECCENTRICITY, 0.0);
}

static addINCLINATION(builder:flatbuffers.Builder, INCLINATION:number) {
  builder.addFieldFloat64(15, INCLINATION, 0.0);
}

static addRAOFASCNODE(builder:flatbuffers.Builder, RAOFASCNODE:number) {
  builder.addFieldFloat64(16, RAOFASCNODE, 0.0);
}

static addARGOFPERICENTER(builder:flatbuffers.Builder, ARGOFPERICENTER:number) {
  builder.addFieldFloat64(17, ARGOFPERICENTER, 0.0);
}

static addMEANANOMALY(builder:flatbuffers.Builder, MEANANOMALY:number) {
  builder.addFieldFloat64(18, MEANANOMALY, 0.0);
}

static addGM(builder:flatbuffers.Builder, GM:number) {
  builder.addFieldFloat64(19, GM, 0.0);
}

static addMASS(builder:flatbuffers.Builder, MASS:number) {
  builder.addFieldFloat64(20, MASS, 0.0);
}

static addSOLARRADAREA(builder:flatbuffers.Builder, SOLARRADAREA:number) {
  builder.addFieldFloat64(21, SOLARRADAREA, 0.0);
}

static addSOLARRADCOEFF(builder:flatbuffers.Builder, SOLARRADCOEFF:number) {
  builder.addFieldFloat64(22, SOLARRADCOEFF, 0.0);
}

static addDRAGAREA(builder:flatbuffers.Builder, DRAGAREA:number) {
  builder.addFieldFloat64(23, DRAGAREA, 0.0);
}

static addDRAGCOEFF(builder:flatbuffers.Builder, DRAGCOEFF:number) {
  builder.addFieldFloat64(24, DRAGCOEFF, 0.0);
}

static addEPHEMERISTYPE(builder:flatbuffers.Builder, EPHEMERISTYPE:ephemerisType) {
  builder.addFieldInt8(25, EPHEMERISTYPE, ephemerisType.SGP4);
}

static addCLASSIFICATIONTYPE(builder:flatbuffers.Builder, CLASSIFICATIONTYPEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(26, CLASSIFICATIONTYPEOffset, 0);
}

static addNORADCATID(builder:flatbuffers.Builder, NORADCATID:number) {
  builder.addFieldInt32(27, NORADCATID, 0);
}

static addELEMENTSETNO(builder:flatbuffers.Builder, ELEMENTSETNO:number) {
  builder.addFieldInt32(28, ELEMENTSETNO, 0);
}

static addREVATEPOCH(builder:flatbuffers.Builder, REVATEPOCH:number) {
  builder.addFieldFloat64(29, REVATEPOCH, 0.0);
}

static addBSTAR(builder:flatbuffers.Builder, BSTAR:number) {
  builder.addFieldFloat64(30, BSTAR, 0.0);
}

static addMEANMOTIONDOT(builder:flatbuffers.Builder, MEANMOTIONDOT:number) {
  builder.addFieldFloat64(31, MEANMOTIONDOT, 0.0);
}

static addMEANMOTIONDDOT(builder:flatbuffers.Builder, MEANMOTIONDDOT:number) {
  builder.addFieldFloat64(32, MEANMOTIONDDOT, 0.0);
}

static addCOVREFFRAME(builder:flatbuffers.Builder, COVREFFRAME:manCovRefFrame) {
  builder.addFieldInt8(33, COVREFFRAME, manCovRefFrame.RSW);
}

static addCXX(builder:flatbuffers.Builder, CXX:number) {
  builder.addFieldFloat64(34, CXX, 0.0);
}

static addCYX(builder:flatbuffers.Builder, CYX:number) {
  builder.addFieldFloat64(35, CYX, 0.0);
}

static addCYY(builder:flatbuffers.Builder, CYY:number) {
  builder.addFieldFloat64(36, CYY, 0.0);
}

static addCZX(builder:flatbuffers.Builder, CZX:number) {
  builder.addFieldFloat64(37, CZX, 0.0);
}

static addCZY(builder:flatbuffers.Builder, CZY:number) {
  builder.addFieldFloat64(38, CZY, 0.0);
}

static addCZZ(builder:flatbuffers.Builder, CZZ:number) {
  builder.addFieldFloat64(39, CZZ, 0.0);
}

static addCXDOTX(builder:flatbuffers.Builder, CXDOTX:number) {
  builder.addFieldFloat64(40, CXDOTX, 0.0);
}

static addCXDOTY(builder:flatbuffers.Builder, CXDOTY:number) {
  builder.addFieldFloat64(41, CXDOTY, 0.0);
}

static addCXDOTZ(builder:flatbuffers.Builder, CXDOTZ:number) {
  builder.addFieldFloat64(42, CXDOTZ, 0.0);
}

static addCXDOTXDOT(builder:flatbuffers.Builder, CXDOTXDOT:number) {
  builder.addFieldFloat64(43, CXDOTXDOT, 0.0);
}

static addCYDOTX(builder:flatbuffers.Builder, CYDOTX:number) {
  builder.addFieldFloat64(44, CYDOTX, 0.0);
}

static addCYDOTY(builder:flatbuffers.Builder, CYDOTY:number) {
  builder.addFieldFloat64(45, CYDOTY, 0.0);
}

static addCYDOTZ(builder:flatbuffers.Builder, CYDOTZ:number) {
  builder.addFieldFloat64(46, CYDOTZ, 0.0);
}

static addCYDOTXDOT(builder:flatbuffers.Builder, CYDOTXDOT:number) {
  builder.addFieldFloat64(47, CYDOTXDOT, 0.0);
}

static addCYDOTYDOT(builder:flatbuffers.Builder, CYDOTYDOT:number) {
  builder.addFieldFloat64(48, CYDOTYDOT, 0.0);
}

static addCZDOTX(builder:flatbuffers.Builder, CZDOTX:number) {
  builder.addFieldFloat64(49, CZDOTX, 0.0);
}

static addCZDOTY(builder:flatbuffers.Builder, CZDOTY:number) {
  builder.addFieldFloat64(50, CZDOTY, 0.0);
}

static addCZDOTZ(builder:flatbuffers.Builder, CZDOTZ:number) {
  builder.addFieldFloat64(51, CZDOTZ, 0.0);
}

static addCZDOTXDOT(builder:flatbuffers.Builder, CZDOTXDOT:number) {
  builder.addFieldFloat64(52, CZDOTXDOT, 0.0);
}

static addCZDOTYDOT(builder:flatbuffers.Builder, CZDOTYDOT:number) {
  builder.addFieldFloat64(53, CZDOTYDOT, 0.0);
}

static addCZDOTZDOT(builder:flatbuffers.Builder, CZDOTZDOT:number) {
  builder.addFieldFloat64(54, CZDOTZDOT, 0.0);
}

static addUSERDEFINEDBIP0044TYPE(builder:flatbuffers.Builder, USERDEFINEDBIP0044TYPE:number) {
  builder.addFieldInt32(55, USERDEFINEDBIP0044TYPE, 0);
}

static addUSERDEFINEDOBJECTDESIGNATOR(builder:flatbuffers.Builder, USERDEFINEDOBJECTDESIGNATOROffset:flatbuffers.Offset) {
  builder.addFieldOffset(56, USERDEFINEDOBJECTDESIGNATOROffset, 0);
}

static addUSERDEFINEDEARTHMODEL(builder:flatbuffers.Builder, USERDEFINEDEARTHMODELOffset:flatbuffers.Offset) {
  builder.addFieldOffset(57, USERDEFINEDEARTHMODELOffset, 0);
}

static addUSERDEFINEDEPOCHTIMESTAMP(builder:flatbuffers.Builder, USERDEFINEDEPOCHTIMESTAMP:number) {
  builder.addFieldFloat64(58, USERDEFINEDEPOCHTIMESTAMP, 0.0);
}

static addUSERDEFINEDMICROSECONDS(builder:flatbuffers.Builder, USERDEFINEDMICROSECONDS:number) {
  builder.addFieldFloat64(59, USERDEFINEDMICROSECONDS, 0.0);
}

static endomm(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishommBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, '$omm');
}

static finishSizePrefixedommBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, '$omm', true);
}

static createomm(builder:flatbuffers.Builder, CCSDSOmmVERS:number, CREATIONDATEOffset:flatbuffers.Offset, ORIGINATOROffset:flatbuffers.Offset, OBJECTNAMEOffset:flatbuffers.Offset, OBJECTIDOffset:flatbuffers.Offset, CENTERNAMEOffset:flatbuffers.Offset, REFFRAME:referenceFrame, REFFRAMEEPOCHOffset:flatbuffers.Offset, TIMESYSTEM:timeSystem, MEANELEMENTTHEORY:meanElementTheory, CommENTOffset:flatbuffers.Offset, EPOCHOffset:flatbuffers.Offset, SEMIMAJORAXIS:number, MEANMOTION:number, ECCENTRICITY:number, INCLINATION:number, RAOFASCNODE:number, ARGOFPERICENTER:number, MEANANOMALY:number, GM:number, MASS:number, SOLARRADAREA:number, SOLARRADCOEFF:number, DRAGAREA:number, DRAGCOEFF:number, EPHEMERISTYPE:ephemerisType, CLASSIFICATIONTYPEOffset:flatbuffers.Offset, NORADCATID:number, ELEMENTSETNO:number, REVATEPOCH:number, BSTAR:number, MEANMOTIONDOT:number, MEANMOTIONDDOT:number, COVREFFRAME:manCovRefFrame, CXX:number, CYX:number, CYY:number, CZX:number, CZY:number, CZZ:number, CXDOTX:number, CXDOTY:number, CXDOTZ:number, CXDOTXDOT:number, CYDOTX:number, CYDOTY:number, CYDOTZ:number, CYDOTXDOT:number, CYDOTYDOT:number, CZDOTX:number, CZDOTY:number, CZDOTZ:number, CZDOTXDOT:number, CZDOTYDOT:number, CZDOTZDOT:number, USERDEFINEDBIP0044TYPE:number, USERDEFINEDOBJECTDESIGNATOROffset:flatbuffers.Offset, USERDEFINEDEARTHMODELOffset:flatbuffers.Offset, USERDEFINEDEPOCHTIMESTAMP:number, USERDEFINEDMICROSECONDS:number):flatbuffers.Offset {
  omm.startomm(builder);
  omm.addCCSDSOmmVERS(builder, CCSDSOmmVERS);
  omm.addCREATIONDATE(builder, CREATIONDATEOffset);
  omm.addORIGINATOR(builder, ORIGINATOROffset);
  omm.addOBJECTNAME(builder, OBJECTNAMEOffset);
  omm.addOBJECTID(builder, OBJECTIDOffset);
  omm.addCENTERNAME(builder, CENTERNAMEOffset);
  omm.addREFFRAME(builder, REFFRAME);
  omm.addREFFRAMEEPOCH(builder, REFFRAMEEPOCHOffset);
  omm.addTIMESYSTEM(builder, TIMESYSTEM);
  omm.addMEANELEMENTTHEORY(builder, MEANELEMENTTHEORY);
  omm.addCommENT(builder, CommENTOffset);
  omm.addEPOCH(builder, EPOCHOffset);
  omm.addSEMIMAJORAXIS(builder, SEMIMAJORAXIS);
  omm.addMEANMOTION(builder, MEANMOTION);
  omm.addECCENTRICITY(builder, ECCENTRICITY);
  omm.addINCLINATION(builder, INCLINATION);
  omm.addRAOFASCNODE(builder, RAOFASCNODE);
  omm.addARGOFPERICENTER(builder, ARGOFPERICENTER);
  omm.addMEANANOMALY(builder, MEANANOMALY);
  omm.addGM(builder, GM);
  omm.addMASS(builder, MASS);
  omm.addSOLARRADAREA(builder, SOLARRADAREA);
  omm.addSOLARRADCOEFF(builder, SOLARRADCOEFF);
  omm.addDRAGAREA(builder, DRAGAREA);
  omm.addDRAGCOEFF(builder, DRAGCOEFF);
  omm.addEPHEMERISTYPE(builder, EPHEMERISTYPE);
  omm.addCLASSIFICATIONTYPE(builder, CLASSIFICATIONTYPEOffset);
  omm.addNORADCATID(builder, NORADCATID);
  omm.addELEMENTSETNO(builder, ELEMENTSETNO);
  omm.addREVATEPOCH(builder, REVATEPOCH);
  omm.addBSTAR(builder, BSTAR);
  omm.addMEANMOTIONDOT(builder, MEANMOTIONDOT);
  omm.addMEANMOTIONDDOT(builder, MEANMOTIONDDOT);
  omm.addCOVREFFRAME(builder, COVREFFRAME);
  omm.addCXX(builder, CXX);
  omm.addCYX(builder, CYX);
  omm.addCYY(builder, CYY);
  omm.addCZX(builder, CZX);
  omm.addCZY(builder, CZY);
  omm.addCZZ(builder, CZZ);
  omm.addCXDOTX(builder, CXDOTX);
  omm.addCXDOTY(builder, CXDOTY);
  omm.addCXDOTZ(builder, CXDOTZ);
  omm.addCXDOTXDOT(builder, CXDOTXDOT);
  omm.addCYDOTX(builder, CYDOTX);
  omm.addCYDOTY(builder, CYDOTY);
  omm.addCYDOTZ(builder, CYDOTZ);
  omm.addCYDOTXDOT(builder, CYDOTXDOT);
  omm.addCYDOTYDOT(builder, CYDOTYDOT);
  omm.addCZDOTX(builder, CZDOTX);
  omm.addCZDOTY(builder, CZDOTY);
  omm.addCZDOTZ(builder, CZDOTZ);
  omm.addCZDOTXDOT(builder, CZDOTXDOT);
  omm.addCZDOTYDOT(builder, CZDOTYDOT);
  omm.addCZDOTZDOT(builder, CZDOTZDOT);
  omm.addUSERDEFINEDBIP0044TYPE(builder, USERDEFINEDBIP0044TYPE);
  omm.addUSERDEFINEDOBJECTDESIGNATOR(builder, USERDEFINEDOBJECTDESIGNATOROffset);
  omm.addUSERDEFINEDEARTHMODEL(builder, USERDEFINEDEARTHMODELOffset);
  omm.addUSERDEFINEDEPOCHTIMESTAMP(builder, USERDEFINEDEPOCHTIMESTAMP);
  omm.addUSERDEFINEDMICROSECONDS(builder, USERDEFINEDMICROSECONDS);
  return omm.endomm(builder);
}

unpack(): ommT {
  return new ommT(
    this.CCSDSOmmVERS(),
    this.CREATIONDATE(),
    this.ORIGINATOR(),
    this.OBJECTNAME(),
    this.OBJECTID(),
    this.CENTERNAME(),
    this.REFFRAME(),
    this.REFFRAMEEPOCH(),
    this.TIMESYSTEM(),
    this.MEANELEMENTTHEORY(),
    this.CommENT(),
    this.EPOCH(),
    this.SEMIMAJORAXIS(),
    this.MEANMOTION(),
    this.ECCENTRICITY(),
    this.INCLINATION(),
    this.RAOFASCNODE(),
    this.ARGOFPERICENTER(),
    this.MEANANOMALY(),
    this.GM(),
    this.MASS(),
    this.SOLARRADAREA(),
    this.SOLARRADCOEFF(),
    this.DRAGAREA(),
    this.DRAGCOEFF(),
    this.EPHEMERISTYPE(),
    this.CLASSIFICATIONTYPE(),
    this.NORADCATID(),
    this.ELEMENTSETNO(),
    this.REVATEPOCH(),
    this.BSTAR(),
    this.MEANMOTIONDOT(),
    this.MEANMOTIONDDOT(),
    this.COVREFFRAME(),
    this.CXX(),
    this.CYX(),
    this.CYY(),
    this.CZX(),
    this.CZY(),
    this.CZZ(),
    this.CXDOTX(),
    this.CXDOTY(),
    this.CXDOTZ(),
    this.CXDOTXDOT(),
    this.CYDOTX(),
    this.CYDOTY(),
    this.CYDOTZ(),
    this.CYDOTXDOT(),
    this.CYDOTYDOT(),
    this.CZDOTX(),
    this.CZDOTY(),
    this.CZDOTZ(),
    this.CZDOTXDOT(),
    this.CZDOTYDOT(),
    this.CZDOTZDOT(),
    this.USERDEFINEDBIP0044TYPE(),
    this.USERDEFINEDOBJECTDESIGNATOR(),
    this.USERDEFINEDEARTHMODEL(),
    this.USERDEFINEDEPOCHTIMESTAMP(),
    this.USERDEFINEDMICROSECONDS()
  );
}


unpackTo(_o: ommT): void {
  _o.CCSDSOmmVERS = this.CCSDSOmmVERS();
  _o.CREATIONDATE = this.CREATIONDATE();
  _o.ORIGINATOR = this.ORIGINATOR();
  _o.OBJECTNAME = this.OBJECTNAME();
  _o.OBJECTID = this.OBJECTID();
  _o.CENTERNAME = this.CENTERNAME();
  _o.REFFRAME = this.REFFRAME();
  _o.REFFRAMEEPOCH = this.REFFRAMEEPOCH();
  _o.TIMESYSTEM = this.TIMESYSTEM();
  _o.MEANELEMENTTHEORY = this.MEANELEMENTTHEORY();
  _o.CommENT = this.CommENT();
  _o.EPOCH = this.EPOCH();
  _o.SEMIMAJORAXIS = this.SEMIMAJORAXIS();
  _o.MEANMOTION = this.MEANMOTION();
  _o.ECCENTRICITY = this.ECCENTRICITY();
  _o.INCLINATION = this.INCLINATION();
  _o.RAOFASCNODE = this.RAOFASCNODE();
  _o.ARGOFPERICENTER = this.ARGOFPERICENTER();
  _o.MEANANOMALY = this.MEANANOMALY();
  _o.GM = this.GM();
  _o.MASS = this.MASS();
  _o.SOLARRADAREA = this.SOLARRADAREA();
  _o.SOLARRADCOEFF = this.SOLARRADCOEFF();
  _o.DRAGAREA = this.DRAGAREA();
  _o.DRAGCOEFF = this.DRAGCOEFF();
  _o.EPHEMERISTYPE = this.EPHEMERISTYPE();
  _o.CLASSIFICATIONTYPE = this.CLASSIFICATIONTYPE();
  _o.NORADCATID = this.NORADCATID();
  _o.ELEMENTSETNO = this.ELEMENTSETNO();
  _o.REVATEPOCH = this.REVATEPOCH();
  _o.BSTAR = this.BSTAR();
  _o.MEANMOTIONDOT = this.MEANMOTIONDOT();
  _o.MEANMOTIONDDOT = this.MEANMOTIONDDOT();
  _o.COVREFFRAME = this.COVREFFRAME();
  _o.CXX = this.CXX();
  _o.CYX = this.CYX();
  _o.CYY = this.CYY();
  _o.CZX = this.CZX();
  _o.CZY = this.CZY();
  _o.CZZ = this.CZZ();
  _o.CXDOTX = this.CXDOTX();
  _o.CXDOTY = this.CXDOTY();
  _o.CXDOTZ = this.CXDOTZ();
  _o.CXDOTXDOT = this.CXDOTXDOT();
  _o.CYDOTX = this.CYDOTX();
  _o.CYDOTY = this.CYDOTY();
  _o.CYDOTZ = this.CYDOTZ();
  _o.CYDOTXDOT = this.CYDOTXDOT();
  _o.CYDOTYDOT = this.CYDOTYDOT();
  _o.CZDOTX = this.CZDOTX();
  _o.CZDOTY = this.CZDOTY();
  _o.CZDOTZ = this.CZDOTZ();
  _o.CZDOTXDOT = this.CZDOTXDOT();
  _o.CZDOTYDOT = this.CZDOTYDOT();
  _o.CZDOTZDOT = this.CZDOTZDOT();
  _o.USERDEFINEDBIP0044TYPE = this.USERDEFINEDBIP0044TYPE();
  _o.USERDEFINEDOBJECTDESIGNATOR = this.USERDEFINEDOBJECTDESIGNATOR();
  _o.USERDEFINEDEARTHMODEL = this.USERDEFINEDEARTHMODEL();
  _o.USERDEFINEDEPOCHTIMESTAMP = this.USERDEFINEDEPOCHTIMESTAMP();
  _o.USERDEFINEDMICROSECONDS = this.USERDEFINEDMICROSECONDS();
}
}

export class ommT {
constructor(
  public CCSDSOmmVERS: number = 0.0,
  public CREATIONDATE: string|Uint8Array|null = null,
  public ORIGINATOR: string|Uint8Array|null = null,
  public OBJECTNAME: string|Uint8Array|null = null,
  public OBJECTID: string|Uint8Array|null = null,
  public CENTERNAME: string|Uint8Array|null = null,
  public REFFRAME: referenceFrame = referenceFrame.TEME,
  public REFFRAMEEPOCH: string|Uint8Array|null = null,
  public TIMESYSTEM: timeSystem = timeSystem.UTC,
  public MEANELEMENTTHEORY: meanElementTheory = meanElementTheory.SGP4,
  public CommENT: string|Uint8Array|null = null,
  public EPOCH: string|Uint8Array|null = null,
  public SEMIMAJORAXIS: number = 0.0,
  public MEANMOTION: number = 0.0,
  public ECCENTRICITY: number = 0.0,
  public INCLINATION: number = 0.0,
  public RAOFASCNODE: number = 0.0,
  public ARGOFPERICENTER: number = 0.0,
  public MEANANOMALY: number = 0.0,
  public GM: number = 0.0,
  public MASS: number = 0.0,
  public SOLARRADAREA: number = 0.0,
  public SOLARRADCOEFF: number = 0.0,
  public DRAGAREA: number = 0.0,
  public DRAGCOEFF: number = 0.0,
  public EPHEMERISTYPE: ephemerisType = ephemerisType.SGP4,
  public CLASSIFICATIONTYPE: string|Uint8Array|null = null,
  public NORADCATID: number = 0,
  public ELEMENTSETNO: number = 0,
  public REVATEPOCH: number = 0.0,
  public BSTAR: number = 0.0,
  public MEANMOTIONDOT: number = 0.0,
  public MEANMOTIONDDOT: number = 0.0,
  public COVREFFRAME: manCovRefFrame = manCovRefFrame.RSW,
  public CXX: number = 0.0,
  public CYX: number = 0.0,
  public CYY: number = 0.0,
  public CZX: number = 0.0,
  public CZY: number = 0.0,
  public CZZ: number = 0.0,
  public CXDOTX: number = 0.0,
  public CXDOTY: number = 0.0,
  public CXDOTZ: number = 0.0,
  public CXDOTXDOT: number = 0.0,
  public CYDOTX: number = 0.0,
  public CYDOTY: number = 0.0,
  public CYDOTZ: number = 0.0,
  public CYDOTXDOT: number = 0.0,
  public CYDOTYDOT: number = 0.0,
  public CZDOTX: number = 0.0,
  public CZDOTY: number = 0.0,
  public CZDOTZ: number = 0.0,
  public CZDOTXDOT: number = 0.0,
  public CZDOTYDOT: number = 0.0,
  public CZDOTZDOT: number = 0.0,
  public USERDEFINEDBIP0044TYPE: number = 0,
  public USERDEFINEDOBJECTDESIGNATOR: string|Uint8Array|null = null,
  public USERDEFINEDEARTHMODEL: string|Uint8Array|null = null,
  public USERDEFINEDEPOCHTIMESTAMP: number = 0.0,
  public USERDEFINEDMICROSECONDS: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const CREATIONDATE = (this.CREATIONDATE !== null ? builder.createString(this.CREATIONDATE!) : 0);
  const ORIGINATOR = (this.ORIGINATOR !== null ? builder.createString(this.ORIGINATOR!) : 0);
  const OBJECTNAME = (this.OBJECTNAME !== null ? builder.createString(this.OBJECTNAME!) : 0);
  const OBJECTID = (this.OBJECTID !== null ? builder.createString(this.OBJECTID!) : 0);
  const CENTERNAME = (this.CENTERNAME !== null ? builder.createString(this.CENTERNAME!) : 0);
  const REFFRAMEEPOCH = (this.REFFRAMEEPOCH !== null ? builder.createString(this.REFFRAMEEPOCH!) : 0);
  const CommENT = (this.CommENT !== null ? builder.createString(this.CommENT!) : 0);
  const EPOCH = (this.EPOCH !== null ? builder.createString(this.EPOCH!) : 0);
  const CLASSIFICATIONTYPE = (this.CLASSIFICATIONTYPE !== null ? builder.createString(this.CLASSIFICATIONTYPE!) : 0);
  const USERDEFINEDOBJECTDESIGNATOR = (this.USERDEFINEDOBJECTDESIGNATOR !== null ? builder.createString(this.USERDEFINEDOBJECTDESIGNATOR!) : 0);
  const USERDEFINEDEARTHMODEL = (this.USERDEFINEDEARTHMODEL !== null ? builder.createString(this.USERDEFINEDEARTHMODEL!) : 0);

  return omm.createomm(builder,
    this.CCSDSOmmVERS,
    CREATIONDATE,
    ORIGINATOR,
    OBJECTNAME,
    OBJECTID,
    CENTERNAME,
    this.REFFRAME,
    REFFRAMEEPOCH,
    this.TIMESYSTEM,
    this.MEANELEMENTTHEORY,
    CommENT,
    EPOCH,
    this.SEMIMAJORAXIS,
    this.MEANMOTION,
    this.ECCENTRICITY,
    this.INCLINATION,
    this.RAOFASCNODE,
    this.ARGOFPERICENTER,
    this.MEANANOMALY,
    this.GM,
    this.MASS,
    this.SOLARRADAREA,
    this.SOLARRADCOEFF,
    this.DRAGAREA,
    this.DRAGCOEFF,
    this.EPHEMERISTYPE,
    CLASSIFICATIONTYPE,
    this.NORADCATID,
    this.ELEMENTSETNO,
    this.REVATEPOCH,
    this.BSTAR,
    this.MEANMOTIONDOT,
    this.MEANMOTIONDDOT,
    this.COVREFFRAME,
    this.CXX,
    this.CYX,
    this.CYY,
    this.CZX,
    this.CZY,
    this.CZZ,
    this.CXDOTX,
    this.CXDOTY,
    this.CXDOTZ,
    this.CXDOTXDOT,
    this.CYDOTX,
    this.CYDOTY,
    this.CYDOTZ,
    this.CYDOTXDOT,
    this.CYDOTYDOT,
    this.CZDOTX,
    this.CZDOTY,
    this.CZDOTZ,
    this.CZDOTXDOT,
    this.CZDOTYDOT,
    this.CZDOTZDOT,
    this.USERDEFINEDBIP0044TYPE,
    USERDEFINEDOBJECTDESIGNATOR,
    USERDEFINEDEARTHMODEL,
    this.USERDEFINEDEPOCHTIMESTAMP,
    this.USERDEFINEDMICROSECONDS
  );
}
}
